# these are sourced by zrok-share.service

#
## you must set the environment enable token and configure one of the two sharing options: existing or new share
#
ZROK_ENABLE_TOKEN=

#
## you may customize the environment name that appears in the zrok console
#
ZROK_ENVIRONMENT_NAME=

#
# 1. EXISTING OPTION: Use an Existing Share
#
# If you have an existing share that was reserved by the same zrok environment, set ZROK_RESERVED_TOKEN. Leave this blank
# if you want this service to create the reserve share URL and complete the next section to define the share backend.
#
#
ZROK_RESERVED_TOKEN=

#
# 2. NEW OPTION: Create a New Share
#
# Define the share to create and run. This is mutually-exclusive to ZROK_RESERVED_TOKEN above. The share URL will be
# provisioned when the service starts. You may change ZROK_BACKEND and the share URL will remain the same after a
# restart as long as the backend mode and authentication options are not altered. 
#
#
# set share backend: change this value and restart to share a new backend with the same frontend URL
#
# proxy: share a backend server URL that's reachable by this host; must begin with 'http://' or 'https://'
ZROK_BACKEND="https://docs.zrok.io"
#
# web: share a static HTML directory that's present on this host; must begin with '/' and be readable by user 'nobody'
#ZROK_BACKEND="/var/www/html"
#
# caddy: run an embedded Caddy server configured by the supplied Caddyfile; must end with '.Caddyfile' and be readable
# by user 'nobody'
#ZROK_BACKEND="/opt/openziti/share/simple_reverse_proxy.Caddyfile"
#
# you may set one OIDC provider; "google" and "github" are valid for default instance zrok.io
# WARNING: changing this value requires provisioning a new share URL
# NOTE: basic auth and oauth are mutually exclusive
#ZROK_OAUTH_PROVIDER="google"
#
# you may restrict access to one or more email addresses or domains; must be a space-separate list
#ZROK_OAUTH_EMAILS="bob@acme.example.com alice@forge.example.com @corp.example.com"
#
# set additional command-line options for the share; see "zrok reserve public --help"
# WARNING: changing this value requires provisioning a new share URL
# NOTE: basic auth and oauth are mutually exclusive
ZROK_SHARE_OPTS=

#
## defaults
#
# DEBUG log level
ZROK_VERBOSE="--verbose"
#
# if defined, an https share's backend server certificate will not be verified
#ZROK_INSECURE="--insecure"
#
# set if self-hosting zrok
#ZROK_API_ENDPOINT="https://api.zrok.io"
